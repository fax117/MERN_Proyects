{"ast":null,"code":"import axios from 'axios';\nimport { PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL } from '../constants/productsConstants.js';\nexport const listProducts = () => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('/api/products');\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listProductDetails = ID => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/products/${id}`);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/fabri/OneDrive/Documents/Udemy/MERN E-COMMERCE/frontend/src/actions/productActions.js"],"names":["axios","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","listProducts","dispatch","type","data","get","payload","error","response","message","listProductDetails","ID","id"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,oBADJ,EAEIC,oBAFJ,EAGIC,iBAHJ,EAIIC,uBAJJ,EAKIC,uBALJ,EAMIC,oBANJ,QAQO,mCARP;AAUA,OAAO,MAAMC,YAAY,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAClD,MAAI;AACAA,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAER;AAAP,KAAD,CAAR;AACA,UAAM;AAAES,MAAAA;AAAF,QAAW,MAAMV,KAAK,CAACW,GAAN,CAAU,eAAV,CAAvB;AACAH,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEP,oBADD;AAELU,MAAAA,OAAO,EAAEF;AAFJ,KAAD,CAAR;AAIH,GAPD,CAOE,OAAOG,KAAP,EAAc;AACZL,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEN,iBADD;AAELS,MAAAA,OAAO,EAAEC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAAtC,GAAgDF,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAApE,GAA8EF,KAAK,CAACE;AAFxF,KAAD,CAAR;AAIH;AACJ,CAdM;AAgBP,OAAO,MAAMC,kBAAkB,GAAIC,EAAD,IAAQ,MAAOT,QAAP,IAAoB;AAC1D,MAAI;AACAA,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEL;AAAP,KAAD,CAAR;AACA,UAAM;AAAEM,MAAAA;AAAF,QAAW,MAAMV,KAAK,CAACW,GAAN,CAAW,iBAAgBO,EAAG,EAA9B,CAAvB;AACAV,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEJ,uBADD;AAELO,MAAAA,OAAO,EAAEF;AAFJ,KAAD,CAAR;AAIH,GAPD,CAOE,OAAOG,KAAP,EAAc;AACZL,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEH,oBADD;AAELM,MAAAA,OAAO,EAAEC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAAtC,GAAgDF,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAApE,GAA8EF,KAAK,CAACE;AAFxF,KAAD,CAAR;AAIH;AACJ,CAdM","sourcesContent":["import axios from 'axios'\r\nimport { \r\n    PRODUCT_LIST_REQUEST, \r\n    PRODUCT_LIST_SUCCESS, \r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_DETAILS_REQUEST, \r\n    PRODUCT_DETAILS_SUCCESS, \r\n    PRODUCT_DETAILS_FAIL\r\n\r\n} from '../constants/productsConstants.js'\r\n\r\nexport const listProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({type: PRODUCT_LIST_REQUEST});\r\n        const { data } = await axios.get('/api/products')\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listProductDetails = (ID) => async (dispatch) => {\r\n    try {\r\n        dispatch({type: PRODUCT_DETAILS_REQUEST});\r\n        const { data } = await axios.get(`/api/products/${id}`)\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}